# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

pool:
  vmImage: ubuntu-latest
container: retrohead/satiator-build-env:latest
steps:
- checkout: self
  submodules: true
  displayName: 'clone sub modules'
- script: |
    make
  displayName: 'make'
- task: CopyFiles@2
  inputs:
    contents: |
      out/menu.bin
      out/menu.elf
      out/menu.map
      iapetus-build/Makefile
    targetFolder: out/archive
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'out/archive/' 
    includeRootFolder: false 
    archiveType: tar
    archiveFile: '$(Build.ArtifactStagingDirectory)/satiator_menu.tar.gz' 
    replaceExistingArchive: true 
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'drop'
- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'retrohead-satiator-menu'
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'manual' # Required when action == Create# Options: auto, manual
    #tagPattern: # Optional
    tag: '66' # Required when action == Edit || Action == Delete || TagSource == Manual
    #title: # Optional
    releaseNotesSource: 'input' # Optional. Options: file, inline
    releaseNotesInline: 'CHANGELOG: v66'
    #releaseNotesFilePath: # Optional. Use the contents of a file as release notes. 
    #releaseNotes: # Optional
    assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    assetUploadMode: 'replace' # Optional. Options: delete, replace
    #isDraft: false # Optional
    #isPreRelease: false # Optional
    #addChangeLog: true # Optional
    #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
    #releaseTag: # Required when compareWith == LastReleaseByTag